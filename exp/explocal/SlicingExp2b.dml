# experiment 2 measures the execution time of the incremental slice line algorithm 
# for 10 iterations with increasingly large input feature matrices  (see SlicingExp2.dml)
# the execution is also measured for the slicefinder algorithm for the same input matrices (see SlicingExp2b.dml)

X = read($1);
e = read($2);

X = X[, 1:8];

n = ceil(nrow(X)/100);

oldX = X[1:nrow(X) - n * 10 ,  1:8]
oldE = e[1:nrow(e) - n * 10 ,]

X2 = oldX;
e2 = oldE;
sigma = $3;


for( i in 1: 10){
    addedX = matrix(0, 0, 8)
    addedE = matrix(0, 0, 1)
    X2 = rbind(X2, addedX);
    e2 = rbind(e2, addedE);

    timeTaken = 0;
    for(j in 1: 10){
        start = time();
        [S,C,D] = slicefinder(X=X2, e=e2, k=10, alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE);
        end = time()

        timeTaken = timeTaken + (((end-start) / 1000000 - 1500));
    }

    timeTaken = timeTaken / 10;
    write(timeTaken, "results/Experiment2_timesSF"+i+".dat", format="csv")
    addedX = X[nrow(X) - n*(11-i) + 1 : nrow(X) - n*(10-i),  ]
    addedE = e[nrow(e) - n *(11-i) + 1 : nrow(e) - n*(10-i), ]
}

