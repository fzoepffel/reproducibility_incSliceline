X = read($1);
e = read($2);
sigma = $3;
iteration = $4;

X = X[, 1:8];

proportion = 0.0005;
decrease = 1 - proportion;
numOfPoints = 10;
totalDataPoints = 100;  # 10 iterations * 10 datapoints
nrows = matrix(0, numOfPoints, 1);

# Set up the log scale from 15 to nrow(X) over 100 points
minRows = 1000;
maxRows = nrow(X);
logScale = matrix(0, totalDataPoints, 1);
for(i in 1:totalDataPoints) {
    logScale[i,1] = exp(log(minRows) + (i-1) * (log(maxRows) - log(minRows)) / (totalDataPoints-1));
}

# Get the starting index for this iteration
startIndex = (iteration - 1) * numOfPoints + 1;

nrows = matrix(0, numOfPoints, 1);
for(i in 1:numOfPoints) {
    nrows[i, 1] = floor(logScale[startIndex + i - 1, 1]);
}

# Write the nrows to a CSV file
write(nrows, "results/Experiment2_nrows" + iteration + ".dat", format = "csv");

# Use log scale values for this iteration
for(i in 1:numOfPoints) {
    # Total rows for this iteration and data point
    totalRows = floor(as.scalar(logScale[startIndex + i - 1, 1]));
    
    # Compute oldX and addedX based on the decrease factor
    oldXRows = floor(totalRows * decrease);
    addedXRows = floor(totalRows - oldXRows);

    oldX = X[1:oldXRows,  ];
    oldE = e[1:oldXRows,  ];

    addedX = X[(oldXRows + 1):(oldXRows + addedXRows),  ];
    addedE = e[(oldXRows + 1):(oldXRows + addedXRows),  ];

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=oldX, addedE=oldE, k=10,
    alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, encodeLat=FALSE);

    # Warm up the system
    [TK1, TKC1, D1, L1, meta1, Stats1, Xout1, eOut1, foffb1, foffe1, params1] = incSliceLine(addedX=addedX, oldX=oldX, oldE=oldE, addedE=addedE, prevLattice=L, metaPrevLattice=meta, prevStats=Stats, prevTK=TK, prevTKC=TKC, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, params=params, prevFoffb=foffb, prevFoffe=foffe, encodeLat=FALSE);

    timeTaken = 0;
    for(j in 1:10) {
        start = time();
        [TK1, TKC1, D1, L1, meta1, Stats1, Xout1, eOut1, foffb1, foffe1, params1] = incSliceLine(addedX=addedX, oldX=oldX, oldE=oldE, addedE=addedE, prevLattice=L, metaPrevLattice=meta, prevStats=Stats, prevTK=TK, prevTKC=TKC, k=10,
            alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, params=params, prevFoffb=foffb, prevFoffe=foffe, encodeLat=FALSE);
        end = time();

        timeTaken = timeTaken + ((end - start) / 1000000);
    }

    timeTaken = timeTaken / 10;
    write(timeTaken, "results/Experiment2_times" + (numOfPoints * iteration + i) + ".dat", format="csv");
}