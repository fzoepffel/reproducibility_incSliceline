# experiment 3 compares the pruned slices on each level for incSliceLine and SliceFinder

X = read($1);
e = read($2);

X = X[, 1:8];

nTotalRows = nrow(X);
proportionList = list(0.0005, 0.03, 0.09, 0.30, 0.887, 0.9995);

# pruningStrat     pruning strategy: 0 all pruning, 1 only score pruning, 2 only size pruning, 3 only max score pruning, 4 no pruning

for(i in 1:6){
    proportion = as.scalar(proportionList[i]);
    decrease = 1 - proportion;

    oldX = X[1:floor(nTotalRows * decrease) ,  ]
    oldE = e[1:floor(nTotalRows * decrease) ,] 

    sigma = $3;

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=oldX, addedE=oldE, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, encodeLat = FALSE);

    addedX = X[floor(nTotalRows * decrease) +1 : nTotalRows,  ]
    addedE = e[floor(nTotalRows * decrease) +1 : nTotalRows, ]

    print("proportion: " + proportion);
    print("nrow(addedX): " + nrow(addedX));
    print("nrow(oldX): " + nrow(oldX));

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=addedX, oldX = oldX, oldE = oldE, addedE=addedE, prevLattice = L, metaPrevLattice=meta, prevStats = Stats, prevTK = TK, prevTKC = TKC, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, params=params, prevFoffb = foffb, prevFoffe = foffe, encodeLat = FALSE, pruningStrat = 3);

    write(D, "results/Experiment5_D_OnlyMaxScore"+i+".dat", format="csv")
}

for(i in 1:6){
    proportion = as.scalar(proportionList[i]);
    decrease = 1 - proportion;

    oldX = X[1:floor(nTotalRows * decrease) ,  ]
    oldE = e[1:floor(nTotalRows * decrease) ,] 

    sigma = $3;

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=oldX, addedE=oldE, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, encodeLat = FALSE);

    addedX = X[floor(nTotalRows * decrease) +1 : nTotalRows,  ]
    addedE = e[floor(nTotalRows * decrease) +1 : nTotalRows, ]

    print("proportion: " + proportion);
    print("nrow(addedX): " + nrow(addedX));
    print("nrow(oldX): " + nrow(oldX));

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=addedX, oldX = oldX, oldE = oldE, addedE=addedE, prevLattice = L, metaPrevLattice=meta, prevStats = Stats, prevTK = TK, prevTKC = TKC, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, params=params, prevFoffb = foffb, prevFoffe = foffe, encodeLat = FALSE,  pruningStrat = 2);

    write(D, "results/Experiment5_D_OnlySize"+i+".dat", format="csv")
}

for(i in 1:6){
    proportion = as.scalar(proportionList[i]);
    decrease = 1 - proportion;

    oldX = X[1:floor(nTotalRows * decrease) ,  ]
    oldE = e[1:floor(nTotalRows * decrease) ,] 

    sigma = $3;

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=oldX, addedE=oldE, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, encodeLat = FALSE);

    addedX = X[floor(nTotalRows * decrease) +1 : nTotalRows,  ]
    addedE = e[floor(nTotalRows * decrease) +1 : nTotalRows, ]

    print("proportion: " + proportion);
    print("nrow(addedX): " + nrow(addedX));
    print("nrow(oldX): " + nrow(oldX));

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=addedX, oldX = oldX, oldE = oldE, addedE=addedE, prevLattice = L, metaPrevLattice=meta, prevStats = Stats, prevTK = TK, prevTKC = TKC, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, params=params, prevFoffb = foffb, prevFoffe = foffe, encodeLat = FALSE, pruningStrat = 1);

    write(D, "results/Experiment5_D_OnlyScore"+i+".dat", format="csv")
}

for(i in 1:6){
    proportion = as.scalar(proportionList[i]);
    decrease = 1 - proportion;

    oldX = X[1:floor(nTotalRows * decrease) ,  ]
    oldE = e[1:floor(nTotalRows * decrease) ,] 

    sigma = $3;

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=oldX, addedE=oldE, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, encodeLat = FALSE);

    addedX = X[floor(nTotalRows * decrease) +1 : nTotalRows,  ]
    addedE = e[floor(nTotalRows * decrease) +1 : nTotalRows, ]

    print("proportion: " + proportion);
    print("nrow(addedX): " + nrow(addedX));
    print("nrow(oldX): " + nrow(oldX));

    [TK, TKC, D, L, meta, Stats, Xout, eOut, foffb, foffe, params] = incSliceLine(addedX=addedX, oldX = oldX, oldE = oldE, addedE=addedE, prevLattice = L, metaPrevLattice=meta, prevStats = Stats, prevTK = TK, prevTKC = TKC, k=10,
        alpha=0.95, minSup=sigma, tpBlksz=16, verbose=TRUE, params=params, prevFoffb = foffb, prevFoffe = foffe, encodeLat = FALSE, pruningStrat = 4);

    write(D, "results/Experiment5_D_AllDisabled"+i+".dat", format="csv")
}

